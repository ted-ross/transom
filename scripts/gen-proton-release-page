#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from transom.generate import *

download_records = (
    ("qpid-proton-{}.tar.gz", "AMQP Messenger, AMQP Protocol Engine"),
    )

component_records = (
    ("messenger", "AMQP Messenger", "C, Java, Perl, PHP, Python, Ruby", "Linux, OS X, JVM", "1.0"),
    ("protocol-engine", "AMQP Protocol Engine", "C, Java, Perl, PHP, Python, Ruby", "Linux, OS X, JVM", "1.0"),
    )

template = \
"""
;;
;; Licensed to the Apache Software Foundation (ASF) under one
;; or more contributor license agreements.  See the NOTICE file
;; distributed with this work for additional information
;; regarding copyright ownership.  The ASF licenses this file
;; to you under the Apache License, Version 2.0 (the
;; "License"); you may not use this file except in compliance
;; with the License.  You may obtain a copy of the License at
;; 
;;   http://www.apache.org/licenses/LICENSE-2.0
;; 
;; Unless required by applicable law or agreed to in writing,
;; software distributed under the License is distributed on an
;; "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
;; KIND, either express or implied.  See the License for the
;; specific language governing permissions and limitations
;; under the License.
;;

# Qpid Proton {release}

Proton is a high-performance, lightweight messaging library. More
about [Qpid
Proton](file:///home/jross/transom/output/proton/index.html).

For a detailed list of the changes in this release, see the [release
notes](release-notes.html).

## Downloads

It's important to [verify the
integrity](@site-url@/download.html#verify-what-you-download) of the
files you download.

  || *Content* || *Download* || *Signature* ||
  {downloads}

## Components

  || *Component* || *Languages* || *Platforms* || *AMQP versions* ||
  {components}

## Documentation

<div class="two-column" markdown="1">
<div class="column" markdown="1">

### Installation

 - [Installing Qpid Proton](http://svn.apache.org/repos/asf/qpid/proton/tags/{release}/README)

### AMQP Protocol Engine

 - [C API reference](protocol-engine/c/api/index.html)
 - [Java API reference](protocol-engine/java/api/index.html)
 - [Python API reference](protocol-engine/python/api/index.html)

</div>
<div class="column" markdown="1">

### AMQP Messenger

 - [C API reference](protocol-engine/c/api/messenger_8h.html)
 - [C examples](messenger/c/examples/index.html)
 - [Java API reference](protocol-engine/java/api/org/apache/qpid/proton/messenger/Messenger.html)
 - [Perl examples](messenger/perl/examples/index.html)
 - [PHP examples](messenger/php/examples/index.html)
 - [Python API reference](protocol-engine/python/api/proton.Messenger-class.html)
 - [Python examples](messenger/python/examples/index.html)
 - [Ruby examples](messenger/ruby/examples/index.html)

</div>
</div>

## More information

 - [All release artefacts](http://www.apache.org/dist/qpid/proton/{release})
 - [Resolved issues in JIRA]({issues_url})
 - [Source repository branch](http://svn.apache.org/repos/asf/qpid/proton/branches/{release})
 - [Source repository tag](http://svn.apache.org/repos/asf/qpid/proton/tags/{release})
"""

def gen_release_page(release, release_dir, current):
    output_path = join(release_dir, "index.md")

    downloads = list()
    components = list()

    source_artifact_url = "http://www.apache.org/dist/qpid/proton/{}/{}"

    if current:
        source_artifact_url = "http://www.apache.org/dyn/closer.cgi/qpid/proton/{}/{}"

    for artifact, summary in download_records:
        artifact = artifact.format(release)
        artifact_url = source_artifact_url.format(release, artifact)
        sig_url = "http://www.apache.org/dist/qpid/proton/{}/{}.asc".format(release, artifact)

        args = summary, artifact, artifact_url, sig_url
        downloads.append("|| {} || [{}]({}) || [PGP]({}) ||".format(*args))

    for key, name, languages, platforms, amqp_versions in component_records:
        link = "[{}](@site-url@/components/{}/index.html)".format(name, key)
        args = link, languages, platforms, amqp_versions
        components.append("|| {} || {} || {} || {} ||".format(*args))

    downloads = "\n  ".join(downloads)
    components = "\n  ".join(components)

    jql = "project = PROTON AND fixVersion = '{}' ORDER BY priority DESC".format(release)
    issues_url = "https://issues.apache.org/jira/issues/?jql={}".format(urllib.quote_plus(jql))

    output = template.format(**locals())
    output = output.strip()

    write(output_path, output)

if len(sys.argv) not in (3, 4):
    sys.exit("Usage: script RELEASE RELEASE-DIR [CURRENT]")

release = sys.argv[1]
release_dir = sys.argv[2]
current = 0

try:
    current = sys.argv[3]
    current = int(current)
except:
    pass

gen_release_page(release, release_dir, current)
