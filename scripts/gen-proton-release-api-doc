#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from transom.generate import *

def gen_protocol_engine(release, source_dir, release_dir):
    component_dir = join(release_dir, "protocol-engine")
    remove(component_dir)

    dir = change_dir(source_dir)
    call("cmake .; make")
    change_dir(dir)

    gen_java_protocol_engine(release, source_dir, component_dir)
    gen_python_protocol_engine(release, source_dir, component_dir)

def gen_java_protocol_engine(release, source_dir, component_dir):
    input_path = join(source_dir, "proton-j", "proton-api", "src", "main", "java")
    input_namespace = "org.apache.qpid.proton"
    output_dir = join(component_dir, "java", "api")

    gen_javadoc(release=release,
                title="Java AMQP Protocol Engine API",
                input_paths=(input_path,),
                input_namespaces=(input_namespace,),
                output_dir=output_dir)

def gen_python_protocol_engine(release, source_dir, component_dir):
    input_path = join(source_dir, "proton-c", "bindings", "python")
    input_namespace = "proton"
    output_dir = join(component_dir, "python", "api")

    gen_epydoc(release=release,
               title="Python AMQP Protocol Engine API",
               input_paths=(input_path,),
               input_namespaces=(input_namespace,),
               output_dir=output_dir)

## Now do stuff ##

if len(sys.argv) != 3:
    sys.exit("Usage: script RELEASE RELEASE-DIR")

call("cmake --version")
call("dot -V")
#call("doxygen --version")
call("epydoc --version")
call("which javadoc")
call("make --version")
#call("rdoc --version")

release = sys.argv[1]
release_dir = sys.argv[2]
source_dir = export_proton_release(release)

gen_protocol_engine(release, source_dir, release_dir)
