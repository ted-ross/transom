#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from transom.generate import *

## Messenger ##

def gen_messenger(release, source_dir, release_dir):
    component_dir = join(release_dir, "messenger")

    gen_c_messenger(release, source_dir, component_dir)
    gen_perl_messenger(release, source_dir, component_dir)
    gen_php_messenger(release, source_dir, component_dir)
    gen_python_messenger(release, source_dir, component_dir)
    gen_ruby_messenger(release, source_dir, component_dir)

def gen_c_messenger(release, source_dir, component_dir):
    input_dir = join(source_dir, "examples", "messenger", "c")
    output_dir = join(component_dir, "c", "examples")

    release_url = "http://svn.apache.org/repos/asf/qpid/proton/tags/{}".format(release)
    source_url = "{}/examples/messenger/c".format(release_url)

    input_names = list_dir(input_dir, "*.c", "*.h")

    gen_examples(release=release,
                 lang="c",
                 title="C AMQP Messenger Examples",
                 input_dir=input_dir,
                 input_names=input_names,
                 output_dir=output_dir,
                 source_url=source_url)

def gen_perl_messenger(release, source_dir, component_dir):
    input_dir = join(source_dir, "examples", "messenger", "perl")
    output_dir = join(component_dir, "perl", "examples")

    release_url = "http://svn.apache.org/repos/asf/qpid/proton/tags/{}".format(release)
    source_url = "{}/examples/messenger/perl".format(release_url)

    input_names = list_dir(input_dir, "*.pl")

    gen_examples(release=release,
                 lang="perl",
                 title="Perl AMQP Messenger Examples",
                 input_dir=input_dir,
                 input_names=input_names,
                 output_dir=output_dir,
                 source_url=source_url)

def gen_php_messenger(release, source_dir, component_dir):
    input_dir = join(source_dir, "examples", "messenger", "php")
    output_dir = join(component_dir, "php", "examples")

    release_url = "http://svn.apache.org/repos/asf/qpid/proton/tags/{}".format(release)
    source_url = "{}/examples/messenger/php".format(release_url)

    input_names = list_dir(input_dir, "*.php")

    gen_examples(release=release,
                 lang="php",
                 title="PHP AMQP Messenger Examples",
                 input_dir=input_dir,
                 input_names=input_names,
                 output_dir=output_dir,
                 source_url=source_url)

def gen_python_messenger(release, source_dir, component_dir):
    input_dir = join(source_dir, "examples", "messenger", "py")
    output_dir = join(component_dir, "python", "examples")

    release_url = "http://svn.apache.org/repos/asf/qpid/proton/tags/{}".format(release)
    source_url = "{}/examples/messenger/py".format(release_url)
    readme_url = "{}/README.txt".format(source_url)

    input_names = list_dir(input_dir, "*.py")

    gen_examples(release=release,
                 lang="python",
                 title="Python AMQP Messenger Examples",
                 input_dir=input_dir,
                 input_names=input_names,
                 output_dir=output_dir,
                 source_url=source_url,
                 readme_url=readme_url)

def gen_ruby_messenger(release, source_dir, component_dir):
    input_dir = join(source_dir, "examples", "messenger", "ruby")
    output_dir = join(component_dir, "ruby", "examples")

    release_url = "http://svn.apache.org/repos/asf/qpid/proton/tags/{}".format(release)
    source_url = "{}/examples/messenger/ruby".format(release_url)

    input_names = list_dir(input_dir, "*.rb")

    gen_examples(release=release,
                 lang="ruby",
                 title="Ruby AMQP Messenger Examples",
                 input_dir=input_dir,
                 input_names=input_names,
                 output_dir=output_dir,
                 source_url=source_url)

## Now do stuff ##

if len(sys.argv) != 3:
    sys.exit("Usage: script RELEASE RELEASE-DIR")

release = sys.argv[1]
release_dir = sys.argv[2]
source_dir = export_proton_release(release)

gen_messenger(release, source_dir, release_dir)
