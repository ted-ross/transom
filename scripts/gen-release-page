#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from transom.generate import *

download_records = (
    ("qpid-{}.tar.gz", "Full source"),
    ("qpid-cpp-{}.tar.gz", "C++ broker, Qpid Messaging API (C++, bindings)"),
    ("qpid-tools-{}.tar.gz", "C++ broker command-line tools"),
    ("qpid-java-broker-{}.tar.gz", "Java broker, Qpid JCA"),
    ("qpid-java-client-{}.tar.gz", "Qpid JMS (AMQP 0-10, 0-91, 0-9, 0-8)"),
    ("qpid-java-amqp-1-0-client-jms-{}.tar.gz", "Qpid JMS (AMQP 1.0)"),
    ("qpid-python-{}.tar.gz", "Qpid Messaging API (Python)"),
    ("qpid-wcf-{}.zip", "Qpid WCF"),
    ("qpid-qmf-{}.tar.gz", "QMF"),
    )

component_records = (
    ("cpp-broker", "C++ broker", "C++", "Linux, Windows", "1.0, 0-10"),
    ("cpp-broker-tools", "C++ broker command-line tools", "-", "Linux", "0-10"),
    ("java-broker", "Java broker", "Java", "JVM", "1.0, 0-10, 0-91, 0-9, 0-8"),
    ("qpid-jca", "Qpid JCA", "Java", "JVM", "0-10"),
    ("qpid-jms", "Qpid JMS", "Java", "JVM", "1.0, 0-10, 0-91, 0-9, 0-8"),
    ("messaging-api", "Qpid Messaging API", "C++, Perl, Python, Ruby, .NET", "Linux, Windows", "1.0, 0-10"),
    ("qpid-wcf", "Qpid WCF", ".NET", "Windows", "0-10"),
    ("qmf", "QMF", "C++, Python", "Linux", "0-10"),
    )

template = \
"""
;;
;; Licensed to the Apache Software Foundation (ASF) under one
;; or more contributor license agreements.  See the NOTICE file
;; distributed with this work for additional information
;; regarding copyright ownership.  The ASF licenses this file
;; to you under the Apache License, Version 2.0 (the
;; "License"); you may not use this file except in compliance
;; with the License.  You may obtain a copy of the License at
;; 
;;   http://www.apache.org/licenses/LICENSE-2.0
;; 
;; Unless required by applicable law or agreed to in writing,
;; software distributed under the License is distributed on an
;; "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
;; KIND, either express or implied.  See the License for the
;; specific language governing permissions and limitations
;; under the License.
;;

# Qpid {release}

Qpid is a cross-platform AMQP messaging system.  It provides message
brokers written in C++ and Java, and clients for C++, Java, Perl,
Python, Ruby, and .NET.  More about [Qpid](@site-url@/index.html).

For a detailed list of the changes in this release, see the [release
notes](release-notes.html).

## Downloads

It's important to [verify the
integrity](@site-url@/download.html#verify-what-you-download) of the
files you download.

  || *Content* || *Download* || *Signature* ||
  {downloads}

Java artefacts are released as compiled bytecode.  Source code is
available in the full source artefact.

## Components

  || *Component* || *Languages* || *Platforms* || *AMQP versions* ||
  {components}

## Documentation

<div class="three-column" markdown="1">

### Installation

 - [Installing and Using Qpid Java](https://cwiki.apache.org/qpid/getting-started-guide.html)
 - [Installing Qpid C++](http://svn.apache.org/repos/asf/qpid/tags/{release}/qpid/cpp/INSTALL)
 - [Installing Qpid Python](http://svn.apache.org/repos/asf/qpid/tags/{release}/qpid/python/README.txt)

### C++ Broker

 - [C++ broker book](cpp-broker/book/index.html) ([PDF](cpp-broker/cpp-broker-book.pdf))

### Java Broker

 - [Java broker book](java-broker/book/index.html) ([PDF](java-broker/java-broker-book.pdf))

### QMF
 
 - [C++ API reference](qmf/cpp/api/index.html)
 - [C++ examples](qmf/cpp/examples/index.html)
 - [Python examples](qmf/python/examples/index.html)
 - [Ruby examples](qmf/ruby/examples/index.html)

### Qpid JCA

 - [README](http://svn.apache.org/repos/asf/qpid/tags/{release}/qpid/java/jca/README.txt)
 - [Examples](http://svn.apache.org/repos/asf/qpid/tags/{release}/qpid/java/jca/example/)

### Qpid JMS

 - [Using the Qpid JMS client](programming/book/index.html#QpidJMS) ([PDF](programming/programming-book.pdf))
 - [API reference](http://docs.oracle.com/javaee/1.4/api/javax/jms/package-summary.html)
 - [Examples](qpid-jms/examples/index.html)

### Qpid Messaging API

 - [Using the Qpid Messaging API](programming/book/index.html) ([PDF](programming/programming-book.pdf))
 - [.NET API reference](messaging-api/dotnet/api/index.html)
 - [.NET examples](messaging-api/dotnet/examples/index.html)
 - [C++ API reference](messaging-api/cpp/api/index.html)
 - [C++ examples](messaging-api/cpp/examples/index.html)
 - [Python API reference](messaging-api/python/api/index.html)
 - [Python examples](messaging-api/python/examples/index.html)
 - [Ruby API reference](messaging-api/ruby/api/index.html)
 - [Ruby examples](messaging-api/ruby/examples/index.html)

### Qpid WCF

 - [README](http://svn.apache.org/repos/asf/qpid/tags/{release}/qpid/wcf/ReadMe.txt)
 - [Using the Qpid WCF client](programming/book/index.html#QpidWCF) ([PDF](programming/programming-book.pdf))
 - [API reference](http://msdn.microsoft.com/en-us/library/vstudio/ms735119\(v=vs.90\).aspx)
 - [Examples](http://svn.apache.org/repos/asf/qpid/tags/{release}/qpid/wcf/samples)

</div>

## More information

 - [All release artefacts](http://www.apache.org/dist/qpid/{release})
 - [Resolved issues in JIRA]({issues_url})
 - [Source repository branch](http://svn.apache.org/repos/asf/qpid/branches/{release})
 - [Source repository tag](http://svn.apache.org/repos/asf/qpid/tags/{release})
"""

def gen_release_page(release, release_dir):
    output_path = join(release_dir, "index.md")

    devel_version = float(release) - 0.01
    devel_version = "{:0.2f}".format(devel_version)

    downloads = list()
    components = list()

    for artifact, summary in download_records:
        artifact = artifact.format(release)
        artifact_url = "http://www.apache.org/dist/qpid/{}/{}".format(release, artifact)
        sig_url = "http://www.apache.org/dist/qpid/{}/{}.asc".format(release, artifact)

        args = summary, artifact, artifact_url, sig_url
        row = "|| {} || [{}]({}) || [PGP]({}) ||".format(*args)

        downloads.append(row)

    for key, name, languages, platforms, amqp_versions in component_records:
        link = "[{}](@site-url@/components/{}/index.html)".format(name, key)
        args = link, languages, platforms, amqp_versions
        components.append("|| {} || {} || {} || {} ||".format(*args))

    downloads = "\n  ".join(downloads)
    components = "\n  ".join(components)

    args = devel_version, release
    jql = "project = QPID AND fixVersion in ('{}', '{}') ORDER BY priority DESC".format(*args)
    issues_url = "https://issues.apache.org/jira/issues/?jql={}".format(urllib.quote_plus(jql))

    output = template.format(**locals())
    output = output.strip()

    write(output_path, output)

if len(sys.argv) != 3:
    sys.exit("Usage: script RELEASE RELEASE-DIR")

release = sys.argv[1]
release_dir = sys.argv[2]

gen_release_page(release, release_dir)
