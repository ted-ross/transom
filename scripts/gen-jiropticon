#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from transom.generate import *

template = \
"""
;;
;; Licensed to the Apache Software Foundation (ASF) under one
;; or more contributor license agreements.  See the NOTICE file
;; distributed with this work for additional information
;; regarding copyright ownership.  The ASF licenses this file
;; to you under the Apache License, Version 2.0 (the
;; "License"); you may not use this file except in compliance
;; with the License.  You may obtain a copy of the License at
;; 
;;   http://www.apache.org/licenses/LICENSE-2.0
;; 
;; Unless required by applicable law or agreed to in writing,
;; software distributed under the License is distributed on an
;; "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
;; KIND, either express or implied.  See the License for the
;; specific language governing permissions and limitations
;; under the License.
;;

# Jiropticon

## Completed features by component

{completed_features}
"""

def gen_jiropticon(output_path):
    jql = """
    project = "Qpid" and issuetype = "New Feature"
    and status in ("Closed", "Resolved") and resolution = "Fixed"
    and component = "C++ Broker"
    """

    lines = list()
    query = QpidQuery()
    query.add("issuetype", "=", "New Feature")
    query.add("status", "in", """("Closed", "Resolved")""")
    query.add("resolution", "=", "Fixed")

    for component in query.components:
        copy = query.copy()
        copy.add("component", "=", component)
        href = copy.render()
        lines.append(" - [{}]({})".format(component, href))

    completed_features = "\n".join(lines)

    output = template.format(**locals())
    output = output.strip()

    write(output_path, output)

if len(sys.argv) != 2:
    sys.exit("Usage: script OUTPUT-PATH")

output_path = sys.argv[1]

gen_jiropticon(output_path)
