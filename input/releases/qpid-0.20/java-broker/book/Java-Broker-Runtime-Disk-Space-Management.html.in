<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">11.3.&#160;Disk Space Management</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="Java-Broker-Runtime-Alerts.html">Prev</a>&#160;</td><th align="center" width="60%">Chapter&#160;11.&#160;Runtime</th><td align="right" width="20%">&#160;<a accesskey="n" href="Java-Broker-Runtime-Handling-Undeliverable-Messages.html">Next</a></td></tr></table><hr /></div><div class="section"><div class="titlepage"><div><div><h2 class="title"><a id="Java-Broker-Runtime-Disk-Space-Management" />11.3.&#160;Disk Space Management</h2></div></div></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="Qpid-Producer-Flow-Control" />11.3.1.&#160;Producer Flow Control</h3></div></div></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="Java-Broker-Runtime-Disk-Space-Management-Producer-Flow-Control-GeneralInformation" />11.3.1.1.&#160;General Information</h4></div></div></div><p>
            The Qpid 0.6 release introduced a simplistic producer-side flow control mechanism
            into the Java Messaging Broker, causing producers to be flow-controlled when they
            attempt to send messages to an overfull queue. Qpid 0.18 introduced a similar
            mechanism triggered by an overfull persistent message store on a virtual host.
        </p></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="Java-Broker-Runtime-Disk-Space-Management-Producer-Flow-Control-ServerConfiguration" />11.3.1.2.&#160;Server Configuration</h4></div></div></div><div class="section"><div class="titlepage"><div><div><h5 class="title"><a id="idm247277923872" />Configuring a Queue to use flow control</h5></div></div></div><p>
                Flow control is enabled on a producer when it sends a message to a Queue
                which is "overfull". The producer flow control will be rescinded when all
                Queues on which a producer is blocking become "underfull". A Queue is defined
                as overfull when the size (in bytes) of the messages on the queue exceeds the
                "capacity" of the Queue. A Queue becomes "underfull" when its size becomes
                less than the "flowResumeCapacity".


             </p><div class="example"><a id="idm247277924896" /><p class="title"><strong>Example&#160;11.1.&#160;Configuring a queue depth limit</strong></p><div class="example-contents"><pre class="programlisting">
                
&lt;queue&gt;
    &lt;name&gt;test&lt;/name&gt;
    &lt;test&gt;
        &lt;exchange&gt;amq.direct&lt;/exchange&gt;
        &lt;capacity&gt;10485760&lt;/capacity&gt;                     &lt;!-- set the queue capacity to 10Mb --&gt;
        &lt;flowResumeCapacity&gt;8388608&lt;/flowResumeCapacity&gt;  &lt;!-- set the resume capacity to 8Mb --&gt;
    &lt;/test&gt;
&lt;/queue&gt;
                
                </pre></div></div><p><br class="example-break" />

                The default for all queues on a virtual host can also be set

             </p><div class="example"><a id="idm247277926736" /><p class="title"><strong>Example&#160;11.2.&#160;Configuring a default queue depth limit on a virtualhost</strong></p><div class="example-contents"><pre class="programlisting">
                
&lt;virtualhosts&gt;
    &lt;virtualhost&gt;
        &lt;name&gt;localhost&lt;/name&gt;
        &lt;localhost&gt;
            &lt;capacity&gt;10485760&lt;/capacity&gt;                     &lt;!-- set the queue capacity to 10Mb --&gt;
            &lt;flowResumeCapacity&gt;8388608&lt;/flowResumeCapacity&gt;  &lt;!-- set the resume capacity to 8Mb --&gt;
        &lt;/localhost&gt;
    &lt;/virtualhost&gt;
&lt;/virtualhosts&gt;
                
                </pre></div></div><p><br class="example-break" />

                Where no flowResumeCapacity is set, the flowResumeCapacity is set to be equal
                to the capacity. Where no capacity is set, capacity is defaulted to 0 meaning
                there is no capacity limit.
            </p><div class="section"><div class="titlepage"><div><div><h6 class="title"><a id="idm247277928480" />Broker Log Messages</h6></div></div></div><p>
                    There are four new Broker log messages that may occur if flow control through queue capacity limits is enabled.
                    Firstly, when a capacity limited queue becomes overfull, a log message similar to the following is produced
                </p><pre class="programlisting">
MESSAGE [vh(/test)/qu(MyQueue)] [vh(/test)/qu(MyQueue)] QUE-1003 : Overfull : Size : 1,200 bytes, Capacity : 1,000
                </pre><p>Then for each channel which becomes blocked upon the overful queue a log message similar to the following is produced:</p><pre class="programlisting">
MESSAGE [con:2(guest@anonymous(713889609)/test)/ch:1] [con:2(guest@anonymous(713889609)/test)/ch:1] CHN-1005 : Flow Control Enforced (Queue MyQueue)
                </pre><p>When enough messages have been consumed from the queue that it becomes underfull, then the following log is generated: </p><pre class="programlisting">
MESSAGE [vh(/test)/qu(MyQueue)] [vh(/test)/qu(MyQueue)] QUE-1004 : Underfull : Size : 600 bytes, Resume Capacity : 800
                </pre><p>And for every channel which becomes unblocked you will see a message similar to: </p><pre class="programlisting">
MESSAGE [con:2(guest@anonymous(713889609)/test)/ch:1] [con:2(guest@anonymous(713889609)/test)/ch:1] CHN-1006 : Flow Control Removed
                </pre><p>Obviously the details of connection, virtual host, queue, size, capacity, etc would depend on the configuration in use.</p></div></div><div class="section"><div class="titlepage"><div><div><h5 class="title"><a id="idm247278515664" />Disk quota-based flow control</h5></div></div></div><p>
                Since version 0.18 of Qpid Broker, flow control can be triggered when a
                configured disk quota is exceeded. This is supported by the BDB and Derby message stores.
            </p><p>
                This functionality blocks all producers on reaching the disk overflow limit. When consumers
                consume the messages, causing disk space usage to falls below the underflow limit, the
                producers are unblocked and continue working as normal.
            </p><p>
                Two limits can be configured:
            </p><p>
                overfull limit - the maximum space on disk (in bytes) which can be used by store.
            </p><p>
                underfull limit - when the space on disk drops below this limit, producers are allowed to resume publishing.
            </p><p>
                An example of quota configuration for the BDB message store is provided below.
            </p><div class="example"><a id="idm247278250016" /><p class="title"><strong>Example&#160;11.3.&#160;Configuring a limit on a store</strong></p><div class="example-contents"><pre class="programlisting">
            
&lt;store&gt;
   &lt;class&gt;org.apache.qpid.server.store.berkeleydb.BDBMessageStore&lt;/class&gt;
   &lt;environment-path&gt;${work}/bdbstore/test&lt;/environment-path&gt;
   &lt;overfull-size&gt;50000000&lt;/overfull-size&gt;
   &lt;underfull-size&gt;45000000&lt;/underfull-size&gt;
&lt;/store&gt;
            
            </pre></div></div><br class="example-break" /><p>
                The disk quota functionality is based on "best effort" principle. This means the broker
                cannot guarantee that the disk space limit will not be exceeded. If several concurrent
                transactions are started before the limit is reached, which collectively cause the limit
                to be exceeded, the broker may allow all of them to be committed.
            </p><div class="section"><div class="titlepage"><div><div><h6 class="title"><a id="idm247278215968" />Broker Log Messages for quota flow control</h6></div></div></div><p>
                    There are 2 new broker log messages that may occur if flow control through disk quota limits is enabled.
                    When the virtual host is blocked due to exceeding of the disk quota limit the following message
                    appears in the broker log
                    </p><pre class="programlisting">
[vh(/test)/ms(BDBMessageStore)] MST-1008 : Store overfull, flow control will be enforced
                    </pre><p>
                    When virtual host is unblocked after cleaning the disk space the following message appears in the broker log
                    </p><pre class="programlisting">
[vh(/test)/ms(BDBMessageStore)] MST-1009 : Store overfull condition cleared
                    </pre><p>
                </p></div></div></div><div class="section"><div class="titlepage"><div><div><h4 class="title"><a id="Java-Broker-Runtime-Disk-Space-Management-Producer-Flow-Control-ClientImpact" />11.3.1.3.&#160;Client impact and configuration</h4></div></div></div><p>
            If a producer sends to a queue which is overfull, the broker will respond by
            instructing the client not to send any more messages. The impact of this is
            that any future attempts to send will block until the broker rescinds the flow control order.
        </p><p>
            While blocking the client will periodically log the fact that it is blocked waiting on flow control.
        </p><pre class="programlisting">
WARN   Message send delayed by 5s due to broker enforced flow control
WARN   Message send delayed by 10s due to broker enforced flow control
        </pre><p>
            After a set period the send will timeout and throw a JMSException to the calling code.
        </p><p>
            If such a JMSException is thrown, the message will not be sent to the broker,
            however the underlying Session may still be active - in particular if the
            Session is transactional then the current transaction will not be automatically
            rolled back. Users may choose to either attempt to resend the message, or to
            roll back any transactional work and close the Session.
        </p><p>
            Both the timeout delay and the periodicity of the warning messages can be set
            using Java system properties.
        </p><p>
            The amount of time (in milliseconds) to wait before timing out
            is controlled by the property qpid.flow_control_wait_failure.
        </p><p>
            The frequency at which the log message informing that the producer is flow
            controlled is sent is controlled by the system property qpid.flow_control_wait_notify_period.
        </p><p>
            Adding the following to the command line to start the client would result in a timeout of one minute,
            with warning messages every ten seconds:
        </p><pre class="programlisting">
-Dqpid.flow_control_wait_failure=60000
-Dqpid.flow_control_wait_notify_period=10000
        </pre><div class="section"><div class="titlepage"><div><div><h5 class="title"><a id="idm247278248096" />Older Clients</h5></div></div></div><p>
                The flow control feature was first added to the Java broker/client in the 0.6 release. If an older client connects to the broker then the flow control commands will be ignored by it and it will not be blocked. So to fully benefit from this feature both Client and Broker need to be at least version 0.6.
            </p></div></div></div></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="Java-Broker-Runtime-Alerts.html">Prev</a>&#160;</td><td align="center" width="20%"><a accesskey="u" href="Java-Broker-Runtime.html">Up</a></td><td align="right" width="40%">&#160;<a accesskey="n" href="Java-Broker-Runtime-Handling-Undeliverable-Messages.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">11.2.&#160;Alerts&#160;</td><td align="center" width="20%"><a accesskey="h" href="index.html">Home</a></td><td align="right" valign="top" width="40%">&#160;11.4.&#160;Handing Undeliverable Messages</td></tr></table></div></div>