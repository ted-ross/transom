
<h1>csharp.example.spout.cs</h1>
<div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Diagnostics</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.ObjectModel</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">Org.Apache.Qpid.Messaging</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">Org.Apache.Qpid.Messaging.Examples</span> <span class="p">{</span>
    <span class="k">class</span> <span class="nc">Spout</span> <span class="p">{</span>
        <span class="c1">//</span>
        <span class="c1">// Sample invocation: csharp.example.spout.exe --broker localhost:5672 my-queue</span>
        <span class="c1">// </span>
        <span class="k">static</span> <span class="kt">bool</span> <span class="nf">NameVal</span><span class="p">(</span><span class="kt">string</span> <span class="n">In</span><span class="p">,</span> <span class="k">out</span> <span class="kt">string</span> <span class="n">nameOut</span><span class="p">,</span> <span class="k">out</span> <span class="kt">string</span> <span class="n">valueOut</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">pos</span> <span class="p">=</span> <span class="n">In</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;=&quot;</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(-</span><span class="m">1</span> <span class="p">==</span> <span class="n">pos</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">nameOut</span> <span class="p">=</span> <span class="n">In</span><span class="p">;</span>
                <span class="n">valueOut</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="n">nameOut</span> <span class="p">=</span> <span class="n">In</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">pos</span><span class="p">);</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">pos</span> <span class="p">+</span> <span class="m">1</span> <span class="p">&lt;</span> <span class="n">In</span><span class="p">.</span><span class="n">Length</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">valueOut</span> <span class="p">=</span> <span class="n">In</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="n">pos</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
                    <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="n">valueOut</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
                    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">static</span> <span class="k">void</span> <span class="nf">SetEntries</span><span class="p">(</span><span class="n">Collection</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">entries</span><span class="p">,</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">object</span><span class="p">&gt;</span> <span class="n">content</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="n">String</span> <span class="n">entry</span> <span class="k">in</span> <span class="n">entries</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="kt">string</span> <span class="n">name</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
                <span class="kt">string</span> <span class="k">value</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">NameVal</span><span class="p">(</span><span class="n">entry</span><span class="p">,</span> <span class="k">out</span> <span class="n">name</span><span class="p">,</span> <span class="k">out</span> <span class="k">value</span><span class="p">))</span>
                    <span class="n">content</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="k">value</span><span class="p">);</span>
                <span class="k">else</span>
                    <span class="n">content</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">static</span> <span class="kt">int</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Options</span> <span class="n">options</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Options</span><span class="p">(</span><span class="n">args</span><span class="p">);</span>

            <span class="n">Connection</span> <span class="n">connection</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
            <span class="k">try</span>
            <span class="p">{</span>
                <span class="n">connection</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Connection</span><span class="p">(</span><span class="n">options</span><span class="p">.</span><span class="n">Url</span><span class="p">,</span> <span class="n">options</span><span class="p">.</span><span class="n">ConnectionOptions</span><span class="p">);</span>
                <span class="n">connection</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
                <span class="n">Session</span> <span class="n">session</span> <span class="p">=</span> <span class="n">connection</span><span class="p">.</span><span class="n">CreateSession</span><span class="p">();</span>
                <span class="n">Sender</span> <span class="n">sender</span> <span class="p">=</span> <span class="n">session</span><span class="p">.</span><span class="n">CreateSender</span><span class="p">(</span><span class="n">options</span><span class="p">.</span><span class="n">Address</span><span class="p">);</span>
                <span class="n">Message</span> <span class="n">message</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">options</span><span class="p">.</span><span class="n">Entries</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">object</span><span class="p">&gt;</span> <span class="n">content</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">object</span><span class="p">&gt;();</span>
                    <span class="n">SetEntries</span><span class="p">(</span><span class="n">options</span><span class="p">.</span><span class="n">Entries</span><span class="p">,</span> <span class="n">content</span><span class="p">);</span>
                    <span class="n">message</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Message</span><span class="p">(</span><span class="n">content</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="n">message</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Message</span><span class="p">(</span><span class="n">options</span><span class="p">.</span><span class="n">Content</span><span class="p">);</span>
                    <span class="n">message</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="s">&quot;text/plain&quot;</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="n">Address</span> <span class="n">replyToAddr</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Address</span><span class="p">(</span><span class="n">options</span><span class="p">.</span><span class="n">ReplyTo</span><span class="p">);</span>

                <span class="n">Stopwatch</span> <span class="n">stopwatch</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Stopwatch</span><span class="p">();</span>
                <span class="n">TimeSpan</span> <span class="n">timespan</span> <span class="p">=</span> <span class="k">new</span> <span class="n">TimeSpan</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="n">options</span><span class="p">.</span><span class="n">Timeout</span><span class="p">);</span>
                <span class="n">stopwatch</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">count</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
                    <span class="p">(</span><span class="m">0</span> <span class="p">==</span> <span class="n">options</span><span class="p">.</span><span class="n">Count</span> <span class="p">||</span> <span class="n">count</span> <span class="p">&lt;</span> <span class="n">options</span><span class="p">.</span><span class="n">Count</span><span class="p">)</span> <span class="p">&amp;&amp;</span>
                    <span class="p">(</span><span class="m">0</span> <span class="p">==</span> <span class="n">options</span><span class="p">.</span><span class="n">Timeout</span> <span class="p">||</span> <span class="n">stopwatch</span><span class="p">.</span><span class="n">Elapsed</span> <span class="p">&lt;=</span> <span class="n">timespan</span><span class="p">);</span>
                    <span class="n">count</span><span class="p">++)</span> 
                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="s">&quot;&quot;</span> <span class="p">!=</span> <span class="n">options</span><span class="p">.</span><span class="n">ReplyTo</span><span class="p">)</span> <span class="n">message</span><span class="p">.</span><span class="n">ReplyTo</span> <span class="p">=</span> <span class="n">replyToAddr</span><span class="p">;</span>
                    <span class="kt">string</span> <span class="n">id</span> <span class="p">=</span> <span class="n">options</span><span class="p">.</span><span class="n">Id</span> <span class="p">;</span>
                    <span class="k">if</span> <span class="p">(</span><span class="s">&quot;&quot;</span> <span class="p">==</span> <span class="n">id</span><span class="p">)</span> <span class="p">{</span>
                        <span class="n">Guid</span> <span class="n">g</span> <span class="p">=</span> <span class="n">Guid</span><span class="p">.</span><span class="n">NewGuid</span><span class="p">();</span>
                        <span class="n">id</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
                    <span class="p">}</span>
                    <span class="kt">string</span> <span class="n">spoutid</span> <span class="p">=</span> <span class="n">id</span> <span class="p">+</span> <span class="s">&quot;:&quot;</span> <span class="p">+</span> <span class="n">count</span><span class="p">;</span>
                    <span class="n">message</span><span class="p">.</span><span class="n">SetProperty</span><span class="p">(</span><span class="s">&quot;spout-id&quot;</span><span class="p">,</span> <span class="n">spoutid</span><span class="p">);</span>
                    <span class="n">sender</span><span class="p">.</span><span class="n">Send</span><span class="p">(</span><span class="n">message</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="n">session</span><span class="p">.</span><span class="n">Sync</span><span class="p">();</span>
                <span class="n">connection</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
                <span class="k">return</span> <span class="m">0</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Exception {0}.&quot;</span><span class="p">,</span> <span class="n">e</span><span class="p">);</span>
                <span class="k">if</span> <span class="p">(</span><span class="k">null</span> <span class="p">!=</span> <span class="n">connection</span><span class="p">)</span>
                    <span class="n">connection</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p><a href="csharp.example.spout.cs">Download this file</a></p>
