
<h1>agent.py</h1>
<div class="highlight"><pre><span class="c">#</span>
<span class="c"># Licensed to the Apache Software Foundation (ASF) under one</span>
<span class="c"># or more contributor license agreements.  See the NOTICE file</span>
<span class="c"># distributed with this work for additional information</span>
<span class="c"># regarding copyright ownership.  The ASF licenses this file</span>
<span class="c"># to you under the Apache License, Version 2.0 (the</span>
<span class="c"># &quot;License&quot;); you may not use this file except in compliance</span>
<span class="c"># with the License.  You may obtain a copy of the License at</span>
<span class="c"># </span>
<span class="c">#   http://www.apache.org/licenses/LICENSE-2.0</span>
<span class="c"># </span>
<span class="c"># Unless required by applicable law or agreed to in writing,</span>
<span class="c"># software distributed under the License is distributed on an</span>
<span class="c"># &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span>
<span class="c"># KIND, either express or implied.  See the License for the</span>
<span class="c"># specific language governing permissions and limitations</span>
<span class="c"># under the License.</span>
<span class="c">#</span>

<span class="kn">import</span> <span class="nn">cqpid</span>
<span class="kn">from</span> <span class="nn">qmf2</span> <span class="kn">import</span> <span class="o">*</span>


<span class="k">class</span> <span class="nc">ExampleAgent</span><span class="p">(</span><span class="n">AgentHandler</span><span class="p">):</span>
  <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">  This example agent is implemented as a single class that inherits AgentHandler.</span>
<span class="sd">  It does not use a separate thread since once set up, it is driven strictly by</span>
<span class="sd">  incoming method calls.</span>
<span class="sd">  &quot;&quot;&quot;</span>

  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">):</span>
    <span class="c">##</span>
    <span class="c">## Create and open a messaging connection to a broker.</span>
    <span class="c">##</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">connection</span> <span class="o">=</span> <span class="n">cqpid</span><span class="o">.</span><span class="n">Connection</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="s">&quot;{reconnect:True}&quot;</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span> <span class="o">=</span> <span class="bp">None</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">open</span><span class="p">()</span>

    <span class="c">##</span>
    <span class="c">## Create, configure, and open a QMFv2 agent session using the connection.</span>
    <span class="c">##</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span> <span class="o">=</span> <span class="n">AgentSession</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">connection</span><span class="p">,</span> <span class="s">&quot;{interval:30}&quot;</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">setVendor</span><span class="p">(</span><span class="s">&#39;profitron.com&#39;</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">setProduct</span><span class="p">(</span><span class="s">&#39;blastinator&#39;</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">setAttribute</span><span class="p">(</span><span class="s">&#39;attr1&#39;</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">open</span><span class="p">()</span>

    <span class="c">##</span>
    <span class="c">## Initialize the parent class.</span>
    <span class="c">##</span>
    <span class="n">AgentHandler</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="p">)</span>


  <span class="k">def</span> <span class="nf">shutdown</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Clean up the session and connection.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="p">:</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>


  <span class="k">def</span> <span class="nf">method</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">handle</span><span class="p">,</span> <span class="n">methodName</span><span class="p">,</span> <span class="n">args</span><span class="p">,</span> <span class="n">subtypes</span><span class="p">,</span> <span class="n">addr</span><span class="p">,</span> <span class="n">userId</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Handle incoming method calls.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="k">if</span> <span class="n">addr</span> <span class="o">==</span> <span class="bp">self</span><span class="o">.</span><span class="n">controlAddr</span><span class="p">:</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">control</span><span class="o">.</span><span class="n">methodCount</span> <span class="o">+=</span> <span class="mi">1</span>

      <span class="k">try</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">methodName</span> <span class="o">==</span> <span class="s">&quot;stop&quot;</span><span class="p">:</span>
          <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">methodSuccess</span><span class="p">(</span><span class="n">handle</span><span class="p">)</span>
          <span class="bp">self</span><span class="o">.</span><span class="n">cancel</span><span class="p">()</span>

        <span class="k">elif</span> <span class="n">methodName</span> <span class="o">==</span> <span class="s">&quot;echo&quot;</span><span class="p">:</span>
          <span class="n">handle</span><span class="o">.</span><span class="n">addReturnArgument</span><span class="p">(</span><span class="s">&quot;sequence&quot;</span><span class="p">,</span> <span class="n">args</span><span class="p">[</span><span class="s">&quot;sequence&quot;</span><span class="p">])</span>
          <span class="n">handle</span><span class="o">.</span><span class="n">addReturnArgument</span><span class="p">(</span><span class="s">&quot;map&quot;</span><span class="p">,</span> <span class="n">args</span><span class="p">[</span><span class="s">&quot;map&quot;</span><span class="p">])</span>
          <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">methodSuccess</span><span class="p">(</span><span class="n">handle</span><span class="p">)</span>

        <span class="k">elif</span> <span class="n">methodName</span> <span class="o">==</span> <span class="s">&quot;event&quot;</span><span class="p">:</span>
          <span class="n">ev</span> <span class="o">=</span> <span class="n">Data</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sch_event</span><span class="p">)</span>
          <span class="n">ev</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span>
          <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">raiseEvent</span><span class="p">(</span><span class="n">ev</span><span class="p">,</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;severity&#39;</span><span class="p">])</span>
          <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">methodSuccess</span><span class="p">(</span><span class="n">handle</span><span class="p">)</span>

        <span class="k">elif</span> <span class="n">methodName</span> <span class="o">==</span> <span class="s">&quot;fail&quot;</span><span class="p">:</span>
          <span class="k">if</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;useString&#39;</span><span class="p">]:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">raiseException</span><span class="p">(</span><span class="n">handle</span><span class="p">,</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;stringVal&#39;</span><span class="p">])</span>
          <span class="k">else</span><span class="p">:</span>
            <span class="n">ex</span> <span class="o">=</span> <span class="n">Data</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sch_exception</span><span class="p">)</span>
            <span class="n">ex</span><span class="o">.</span><span class="n">whatHappened</span> <span class="o">=</span> <span class="s">&quot;It Failed&quot;</span>
            <span class="n">ex</span><span class="o">.</span><span class="n">howBad</span> <span class="o">=</span> <span class="mi">75</span>
            <span class="n">ex</span><span class="o">.</span><span class="n">details</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;details&#39;</span><span class="p">]</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">raiseException</span><span class="p">(</span><span class="n">handle</span><span class="p">,</span> <span class="n">ex</span><span class="p">)</span>

        <span class="k">elif</span> <span class="n">methodName</span> <span class="o">==</span> <span class="s">&quot;create_child&quot;</span><span class="p">:</span>
          <span class="n">name</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;name&#39;</span><span class="p">]</span>
          <span class="n">child</span> <span class="o">=</span> <span class="n">Data</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sch_child</span><span class="p">)</span>
          <span class="n">child</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
          <span class="n">addr</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">addData</span><span class="p">(</span><span class="n">child</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
          <span class="n">handle</span><span class="o">.</span><span class="n">addReturnArgument</span><span class="p">(</span><span class="s">&quot;childAddr&quot;</span><span class="p">,</span> <span class="n">addr</span><span class="o">.</span><span class="n">asMap</span><span class="p">())</span>
          <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">methodSuccess</span><span class="p">(</span><span class="n">handle</span><span class="p">)</span>
      <span class="k">except</span> <span class="ne">BaseException</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">raiseException</span><span class="p">(</span><span class="n">handle</span><span class="p">,</span> <span class="s">&quot;</span><span class="si">%r</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span><span class="p">)</span>


  <span class="k">def</span> <span class="nf">setupSchema</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Create and register the schema for this agent.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="n">package</span> <span class="o">=</span> <span class="s">&quot;com.profitron.bntor&quot;</span>

    <span class="c">##</span>
    <span class="c">## Declare a schema for a structured exception that can be used in failed</span>
    <span class="c">## method invocations.</span>
    <span class="c">##</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_exception</span> <span class="o">=</span> <span class="n">Schema</span><span class="p">(</span><span class="n">SCHEMA_TYPE_DATA</span><span class="p">,</span> <span class="n">package</span><span class="p">,</span> <span class="s">&quot;exception&quot;</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_exception</span><span class="o">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;whatHappened&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_exception</span><span class="o">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;howBad&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_INT</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_exception</span><span class="o">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;details&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_MAP</span><span class="p">))</span>

    <span class="c">##</span>
    <span class="c">## Declare a control object to test methods against.</span>
    <span class="c">##</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span> <span class="o">=</span> <span class="n">Schema</span><span class="p">(</span><span class="n">SCHEMA_TYPE_DATA</span><span class="p">,</span> <span class="n">package</span><span class="p">,</span> <span class="s">&quot;control&quot;</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="o">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;state&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="o">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;methodCount&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_INT</span><span class="p">))</span>

    <span class="n">stopMethod</span> <span class="o">=</span> <span class="n">SchemaMethod</span><span class="p">(</span><span class="s">&quot;stop&quot;</span><span class="p">,</span> <span class="n">desc</span><span class="o">=</span><span class="s">&quot;Stop Agent&quot;</span><span class="p">)</span>
    <span class="n">stopMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;message&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="o">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">stopMethod</span><span class="p">)</span>

    <span class="n">echoMethod</span> <span class="o">=</span> <span class="n">SchemaMethod</span><span class="p">(</span><span class="s">&quot;echo&quot;</span><span class="p">,</span> <span class="n">desc</span><span class="o">=</span><span class="s">&quot;Echo Arguments&quot;</span><span class="p">)</span>
    <span class="n">echoMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;sequence&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_INT</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN_OUT</span><span class="p">))</span>
    <span class="n">echoMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;map&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_MAP</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN_OUT</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="o">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">echoMethod</span><span class="p">)</span>

    <span class="n">eventMethod</span> <span class="o">=</span> <span class="n">SchemaMethod</span><span class="p">(</span><span class="s">&quot;event&quot;</span><span class="p">,</span> <span class="n">desc</span><span class="o">=</span><span class="s">&quot;Raise an Event&quot;</span><span class="p">)</span>
    <span class="n">eventMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;text&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN</span><span class="p">))</span>
    <span class="n">eventMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;severity&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_INT</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="o">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">eventMethod</span><span class="p">)</span>

    <span class="n">failMethod</span> <span class="o">=</span> <span class="n">SchemaMethod</span><span class="p">(</span><span class="s">&quot;fail&quot;</span><span class="p">,</span> <span class="n">desc</span><span class="o">=</span><span class="s">&quot;Expected to Fail&quot;</span><span class="p">)</span>
    <span class="n">failMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;useString&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_BOOL</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN</span><span class="p">))</span>
    <span class="n">failMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;stringVal&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN</span><span class="p">))</span>
    <span class="n">failMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;details&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_MAP</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="o">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">failMethod</span><span class="p">)</span>

    <span class="n">createMethod</span> <span class="o">=</span> <span class="n">SchemaMethod</span><span class="p">(</span><span class="s">&quot;create_child&quot;</span><span class="p">,</span> <span class="n">desc</span><span class="o">=</span><span class="s">&quot;Create Child Object&quot;</span><span class="p">)</span>
    <span class="n">createMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;name&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_IN</span><span class="p">))</span>
    <span class="n">createMethod</span><span class="o">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;childAddr&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_MAP</span><span class="p">,</span> <span class="n">direction</span><span class="o">=</span><span class="n">DIR_OUT</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="o">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">createMethod</span><span class="p">)</span>

    <span class="c">##</span>
    <span class="c">## Declare a child object</span>
    <span class="c">##</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_child</span> <span class="o">=</span> <span class="n">Schema</span><span class="p">(</span><span class="n">SCHEMA_TYPE_DATA</span><span class="p">,</span> <span class="n">package</span><span class="p">,</span> <span class="s">&quot;child&quot;</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_child</span><span class="o">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;name&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">))</span>

    <span class="c">##</span>
    <span class="c">## Declare the event class</span>
    <span class="c">##</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_event</span> <span class="o">=</span> <span class="n">Schema</span><span class="p">(</span><span class="n">SCHEMA_TYPE_EVENT</span><span class="p">,</span> <span class="n">package</span><span class="p">,</span> <span class="s">&quot;event&quot;</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sch_event</span><span class="o">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;text&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">))</span>

    <span class="c">##</span>
    <span class="c">## Register our schemata with the agent session.</span>
    <span class="c">##</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">registerSchema</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sch_exception</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">registerSchema</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">registerSchema</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sch_child</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">registerSchema</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sch_event</span><span class="p">)</span>


  <span class="k">def</span> <span class="nf">populateData</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Create a control object and give it to the agent session to manage.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">control</span> <span class="o">=</span> <span class="n">Data</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sch_control</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">control</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="s">&quot;OPERATIONAL&quot;</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">control</span><span class="o">.</span><span class="n">methodCount</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">controlAddr</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">addData</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">control</span><span class="p">,</span> <span class="s">&quot;singleton&quot;</span><span class="p">)</span>


<span class="k">try</span><span class="p">:</span>
  <span class="n">agent</span> <span class="o">=</span> <span class="n">ExampleAgent</span><span class="p">(</span><span class="s">&quot;localhost&quot;</span><span class="p">)</span>
  <span class="n">agent</span><span class="o">.</span><span class="n">setupSchema</span><span class="p">()</span>
  <span class="n">agent</span><span class="o">.</span><span class="n">populateData</span><span class="p">()</span>
  <span class="n">agent</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>  <span class="c"># Use agent.start() to launch the agent in a separate thread</span>
  <span class="n">agent</span><span class="o">.</span><span class="n">shutdown</span><span class="p">()</span>
<span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
  <span class="k">print</span> <span class="s">&quot;Exception Caught:&quot;</span><span class="p">,</span> <span class="n">e</span>
</pre></div>

<p><a href="agent.py">Download this file</a></p>
