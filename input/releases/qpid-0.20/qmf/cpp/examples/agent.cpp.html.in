
<h1>agent.cpp</h1>
<div class="highlight"><pre><span class="cp">#include &lt;qpid/messaging/Connection.h&gt;</span>
<span class="cp">#include &lt;qpid/messaging/Duration.h&gt;</span>
<span class="cp">#include &lt;qmf/AgentSession.h&gt;</span>
<span class="cp">#include &lt;qmf/AgentEvent.h&gt;</span>
<span class="cp">#include &lt;qmf/Schema.h&gt;</span>
<span class="cp">#include &lt;qmf/SchemaProperty.h&gt;</span>
<span class="cp">#include &lt;qmf/SchemaMethod.h&gt;</span>
<span class="cp">#include &lt;qmf/Data.h&gt;</span>
<span class="cp">#include &lt;qmf/DataAddr.h&gt;</span>
<span class="cp">#include &lt;qpid/types/Variant.h&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;iostream&gt;</span>

<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">qmf</span><span class="p">;</span>
<span class="k">using</span> <span class="n">qpid</span><span class="o">::</span><span class="n">types</span><span class="o">::</span><span class="n">Variant</span><span class="p">;</span>
<span class="k">using</span> <span class="n">qpid</span><span class="o">::</span><span class="n">messaging</span><span class="o">::</span><span class="n">Duration</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">ExampleAgent</span> <span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">ExampleAgent</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">url</span><span class="p">);</span>
    <span class="o">~</span><span class="n">ExampleAgent</span><span class="p">();</span>

    <span class="kt">void</span> <span class="n">setupSchema</span><span class="p">();</span>
    <span class="kt">void</span> <span class="n">populateData</span><span class="p">();</span>
    <span class="kt">void</span> <span class="n">run</span><span class="p">();</span>
<span class="k">private</span><span class="o">:</span>
    <span class="n">qpid</span><span class="o">::</span><span class="n">messaging</span><span class="o">::</span><span class="n">Connection</span> <span class="n">connection</span><span class="p">;</span>
    <span class="n">AgentSession</span> <span class="n">session</span><span class="p">;</span>
    <span class="n">Schema</span> <span class="n">sch_exception</span><span class="p">;</span>
    <span class="n">Schema</span> <span class="n">sch_control</span><span class="p">;</span>
    <span class="n">Schema</span> <span class="n">sch_child</span><span class="p">;</span>
    <span class="n">Schema</span> <span class="n">sch_event</span><span class="p">;</span>
    <span class="n">Data</span> <span class="n">control</span><span class="p">;</span>
    <span class="n">DataAddr</span> <span class="n">controlAddr</span><span class="p">;</span>

    <span class="kt">bool</span> <span class="n">method</span><span class="p">(</span><span class="n">AgentEvent</span><span class="o">&amp;</span> <span class="n">event</span><span class="p">);</span>
<span class="p">};</span>


<span class="n">ExampleAgent</span><span class="o">::</span><span class="n">ExampleAgent</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">url</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">//</span>
    <span class="c1">// Create and open a messaging connection to a broker.</span>
    <span class="c1">//</span>
    <span class="n">connection</span> <span class="o">=</span> <span class="n">qpid</span><span class="o">::</span><span class="n">messaging</span><span class="o">::</span><span class="n">Connection</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="s">&quot;{reconnect:True}&quot;</span><span class="p">);</span>
    <span class="n">connection</span><span class="p">.</span><span class="n">open</span><span class="p">();</span>

    <span class="c1">//</span>
    <span class="c1">// Create, configure, and open a QMFv2 agent session using the connection.</span>
    <span class="c1">//</span>
    <span class="n">session</span> <span class="o">=</span> <span class="n">AgentSession</span><span class="p">(</span><span class="n">connection</span><span class="p">,</span> <span class="s">&quot;{interval:30}&quot;</span><span class="p">);</span>
    <span class="n">session</span><span class="p">.</span><span class="n">setVendor</span><span class="p">(</span><span class="s">&quot;profitron.com&quot;</span><span class="p">);</span>
    <span class="n">session</span><span class="p">.</span><span class="n">setProduct</span><span class="p">(</span><span class="s">&quot;gizmo&quot;</span><span class="p">);</span>
    <span class="n">session</span><span class="p">.</span><span class="n">setAttribute</span><span class="p">(</span><span class="s">&quot;attr1&quot;</span><span class="p">,</span> <span class="mi">2000</span><span class="p">);</span>
    <span class="n">session</span><span class="p">.</span><span class="n">open</span><span class="p">();</span>
<span class="p">}</span>

<span class="n">ExampleAgent</span><span class="o">::~</span><span class="n">ExampleAgent</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">//</span>
    <span class="c1">// Clean up the QMF session and the AMQP connection.</span>
    <span class="c1">//</span>
    <span class="n">session</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
    <span class="n">connection</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">ExampleAgent</span><span class="o">::</span><span class="n">setupSchema</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">//</span>
    <span class="c1">// Create and register schema for this agent.</span>
    <span class="c1">//</span>
    <span class="n">string</span> <span class="n">package</span><span class="p">(</span><span class="s">&quot;com.profitron.gizmo&quot;</span><span class="p">);</span>

    <span class="c1">//</span>
    <span class="c1">// Declare a schema for a structured exception that can be used in failed</span>
    <span class="c1">// method invocations.</span>
    <span class="c1">//</span>
    <span class="n">sch_exception</span> <span class="o">=</span> <span class="n">Schema</span><span class="p">(</span><span class="n">SCHEMA_TYPE_DATA</span><span class="p">,</span> <span class="n">package</span><span class="p">,</span> <span class="s">&quot;exception&quot;</span><span class="p">);</span>
    <span class="n">sch_exception</span><span class="p">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;whatHappened&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">));</span>
    <span class="n">sch_exception</span><span class="p">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;howBad&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_INT</span><span class="p">));</span>
    <span class="n">sch_exception</span><span class="p">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;details&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_MAP</span><span class="p">));</span>

    <span class="c1">//</span>
    <span class="c1">// Declare a control object to test methods against.</span>
    <span class="c1">//</span>
    <span class="n">sch_control</span> <span class="o">=</span> <span class="n">Schema</span><span class="p">(</span><span class="n">SCHEMA_TYPE_DATA</span><span class="p">,</span> <span class="n">package</span><span class="p">,</span> <span class="s">&quot;control&quot;</span><span class="p">);</span>
    <span class="n">sch_control</span><span class="p">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;state&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">));</span>
    <span class="n">sch_control</span><span class="p">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;methodCount&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_INT</span><span class="p">));</span>

    <span class="n">SchemaMethod</span> <span class="n">stopMethod</span><span class="p">(</span><span class="s">&quot;stop&quot;</span><span class="p">,</span> <span class="s">&quot;{desc:&#39;Stop Agent&#39;}&quot;</span><span class="p">);</span>
    <span class="n">stopMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;message&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">));</span>
    <span class="n">sch_control</span><span class="p">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">stopMethod</span><span class="p">);</span>

    <span class="n">SchemaMethod</span> <span class="n">echoMethod</span><span class="p">(</span><span class="s">&quot;echo&quot;</span><span class="p">,</span> <span class="s">&quot;{desc:&#39;Echo Arguments&#39;}&quot;</span><span class="p">);</span>
    <span class="n">echoMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;sequence&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_INT</span><span class="p">,</span> <span class="s">&quot;{dir:INOUT}&quot;</span><span class="p">));</span>
    <span class="n">echoMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;map&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_MAP</span><span class="p">,</span> <span class="s">&quot;{dir:INOUT}&quot;</span><span class="p">));</span>
    <span class="n">sch_control</span><span class="p">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">echoMethod</span><span class="p">);</span>

    <span class="n">SchemaMethod</span> <span class="n">eventMethod</span><span class="p">(</span><span class="s">&quot;event&quot;</span><span class="p">,</span> <span class="s">&quot;{desc:&#39;Raise an Event&#39;}&quot;</span><span class="p">);</span>
    <span class="n">eventMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;text&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">,</span> <span class="s">&quot;{dir:IN}&quot;</span><span class="p">));</span>
    <span class="n">eventMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;severity&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_INT</span><span class="p">,</span> <span class="s">&quot;{dir:IN}&quot;</span><span class="p">));</span>
    <span class="n">sch_control</span><span class="p">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">eventMethod</span><span class="p">);</span>

    <span class="n">SchemaMethod</span> <span class="n">failMethod</span><span class="p">(</span><span class="s">&quot;fail&quot;</span><span class="p">,</span> <span class="s">&quot;{desc:&#39;Expected to Fail&#39;}&quot;</span><span class="p">);</span>
    <span class="n">failMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;useString&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_BOOL</span><span class="p">,</span> <span class="s">&quot;{dir:IN}&quot;</span><span class="p">));</span>
    <span class="n">failMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;stringVal&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">,</span> <span class="s">&quot;{dir:IN}&quot;</span><span class="p">));</span>
    <span class="n">failMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;details&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_MAP</span><span class="p">,</span> <span class="s">&quot;{dir:IN}&quot;</span><span class="p">));</span>
    <span class="n">sch_control</span><span class="p">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">failMethod</span><span class="p">);</span>

    <span class="n">SchemaMethod</span> <span class="n">createMethod</span><span class="p">(</span><span class="s">&quot;create_child&quot;</span><span class="p">,</span> <span class="s">&quot;{desc:&#39;Create Child Object&#39;}&quot;</span><span class="p">);</span>
    <span class="n">createMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;name&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">,</span> <span class="s">&quot;{dir:IN}&quot;</span><span class="p">));</span>
    <span class="n">createMethod</span><span class="p">.</span><span class="n">addArgument</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;childAddr&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_MAP</span><span class="p">,</span> <span class="s">&quot;{dir:OUT}&quot;</span><span class="p">));</span>
    <span class="n">sch_control</span><span class="p">.</span><span class="n">addMethod</span><span class="p">(</span><span class="n">createMethod</span><span class="p">);</span>

    <span class="c1">//</span>
    <span class="c1">// Declare the child class</span>
    <span class="c1">//</span>
    <span class="n">sch_child</span> <span class="o">=</span> <span class="n">Schema</span><span class="p">(</span><span class="n">SCHEMA_TYPE_DATA</span><span class="p">,</span> <span class="n">package</span><span class="p">,</span> <span class="s">&quot;child&quot;</span><span class="p">);</span>
    <span class="n">sch_child</span><span class="p">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;name&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">));</span>

    <span class="c1">//</span>
    <span class="c1">// Declare the event class</span>
    <span class="c1">//</span>
    <span class="n">sch_event</span> <span class="o">=</span> <span class="n">Schema</span><span class="p">(</span><span class="n">SCHEMA_TYPE_EVENT</span><span class="p">,</span> <span class="n">package</span><span class="p">,</span> <span class="s">&quot;event&quot;</span><span class="p">);</span>
    <span class="n">sch_event</span><span class="p">.</span><span class="n">addProperty</span><span class="p">(</span><span class="n">SchemaProperty</span><span class="p">(</span><span class="s">&quot;text&quot;</span><span class="p">,</span> <span class="n">SCHEMA_DATA_STRING</span><span class="p">));</span>

    <span class="c1">//</span>
    <span class="c1">// Register our schemata with the agent session.</span>
    <span class="c1">//</span>
    <span class="n">session</span><span class="p">.</span><span class="n">registerSchema</span><span class="p">(</span><span class="n">sch_exception</span><span class="p">);</span>
    <span class="n">session</span><span class="p">.</span><span class="n">registerSchema</span><span class="p">(</span><span class="n">sch_control</span><span class="p">);</span>
    <span class="n">session</span><span class="p">.</span><span class="n">registerSchema</span><span class="p">(</span><span class="n">sch_child</span><span class="p">);</span>
    <span class="n">session</span><span class="p">.</span><span class="n">registerSchema</span><span class="p">(</span><span class="n">sch_event</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">ExampleAgent</span><span class="o">::</span><span class="n">populateData</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">//</span>
    <span class="c1">// Create a control object and give it to the agent session to manage.</span>
    <span class="c1">//</span>
    <span class="n">control</span> <span class="o">=</span> <span class="n">Data</span><span class="p">(</span><span class="n">sch_control</span><span class="p">);</span>
    <span class="n">control</span><span class="p">.</span><span class="n">setProperty</span><span class="p">(</span><span class="s">&quot;state&quot;</span><span class="p">,</span> <span class="s">&quot;OPERATIONAL&quot;</span><span class="p">);</span>
    <span class="n">control</span><span class="p">.</span><span class="n">setProperty</span><span class="p">(</span><span class="s">&quot;methodCount&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">controlAddr</span> <span class="o">=</span> <span class="n">session</span><span class="p">.</span><span class="n">addData</span><span class="p">(</span><span class="n">control</span><span class="p">,</span> <span class="s">&quot;singleton&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">ExampleAgent</span><span class="o">::</span><span class="n">run</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">AgentEvent</span> <span class="n">event</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">running</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">running</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">bool</span> <span class="n">valid</span><span class="p">(</span><span class="n">session</span><span class="p">.</span><span class="n">nextEvent</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">Duration</span><span class="o">::</span><span class="n">SECOND</span><span class="p">));</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">valid</span> <span class="o">&amp;&amp;</span> <span class="n">running</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">switch</span> <span class="p">(</span><span class="n">event</span><span class="p">.</span><span class="n">getType</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">case</span> <span class="nl">AGENT_METHOD:</span>
                <span class="n">running</span> <span class="o">=</span> <span class="n">method</span><span class="p">(</span><span class="n">event</span><span class="p">);</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">bool</span> <span class="n">ExampleAgent</span><span class="o">::</span><span class="n">method</span><span class="p">(</span><span class="n">AgentEvent</span><span class="o">&amp;</span> <span class="n">event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">name</span><span class="p">(</span><span class="n">event</span><span class="p">.</span><span class="n">getMethodName</span><span class="p">());</span>
    <span class="n">control</span><span class="p">.</span><span class="n">setProperty</span><span class="p">(</span><span class="s">&quot;methodCount&quot;</span><span class="p">,</span> <span class="n">control</span><span class="p">.</span><span class="n">getProperty</span><span class="p">(</span><span class="s">&quot;methodCount&quot;</span><span class="p">).</span><span class="n">asUint32</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>

    <span class="k">try</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">controlAddr</span> <span class="o">==</span> <span class="n">event</span><span class="p">.</span><span class="n">getDataAddr</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="o">==</span> <span class="s">&quot;stop&quot;</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Stopping: message=&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;message&quot;</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                <span class="n">session</span><span class="p">.</span><span class="n">methodSuccess</span><span class="p">(</span><span class="n">event</span><span class="p">);</span>
                <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="o">==</span> <span class="s">&quot;echo&quot;</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">event</span><span class="p">.</span><span class="n">addReturnArgument</span><span class="p">(</span><span class="s">&quot;sequence&quot;</span><span class="p">,</span> <span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;sequence&quot;</span><span class="p">]);</span>
                <span class="n">event</span><span class="p">.</span><span class="n">addReturnArgument</span><span class="p">(</span><span class="s">&quot;map&quot;</span><span class="p">,</span> <span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;map&quot;</span><span class="p">]);</span>
                <span class="n">session</span><span class="p">.</span><span class="n">methodSuccess</span><span class="p">(</span><span class="n">event</span><span class="p">);</span>
                <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="o">==</span> <span class="s">&quot;event&quot;</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">Data</span> <span class="n">ev</span><span class="p">(</span><span class="n">sch_event</span><span class="p">);</span>
                <span class="n">ev</span><span class="p">.</span><span class="n">setProperty</span><span class="p">(</span><span class="s">&quot;text&quot;</span><span class="p">,</span> <span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;text&quot;</span><span class="p">]);</span>
                <span class="n">session</span><span class="p">.</span><span class="n">raiseEvent</span><span class="p">(</span><span class="n">ev</span><span class="p">,</span> <span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;severity&quot;</span><span class="p">]);</span>
                <span class="n">session</span><span class="p">.</span><span class="n">methodSuccess</span><span class="p">(</span><span class="n">event</span><span class="p">);</span>
                <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="o">==</span> <span class="s">&quot;fail&quot;</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;useString&quot;</span><span class="p">])</span>
                    <span class="n">session</span><span class="p">.</span><span class="n">raiseException</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;stringVal&quot;</span><span class="p">]);</span>
                <span class="k">else</span> <span class="p">{</span>
                    <span class="n">Data</span> <span class="n">ex</span><span class="p">(</span><span class="n">sch_exception</span><span class="p">);</span>
                    <span class="n">ex</span><span class="p">.</span><span class="n">setProperty</span><span class="p">(</span><span class="s">&quot;whatHappened&quot;</span><span class="p">,</span> <span class="s">&quot;It Failed&quot;</span><span class="p">);</span>
                    <span class="n">ex</span><span class="p">.</span><span class="n">setProperty</span><span class="p">(</span><span class="s">&quot;howBad&quot;</span><span class="p">,</span> <span class="mi">75</span><span class="p">);</span>
                    <span class="n">ex</span><span class="p">.</span><span class="n">setProperty</span><span class="p">(</span><span class="s">&quot;details&quot;</span><span class="p">,</span> <span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;details&quot;</span><span class="p">]);</span>
                    <span class="n">session</span><span class="p">.</span><span class="n">raiseException</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">ex</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="o">==</span> <span class="s">&quot;create_child&quot;</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">name</span><span class="p">(</span><span class="n">event</span><span class="p">.</span><span class="n">getArguments</span><span class="p">()[</span><span class="s">&quot;name&quot;</span><span class="p">]);</span>
                <span class="n">Data</span> <span class="n">child</span><span class="p">(</span><span class="n">sch_child</span><span class="p">);</span>
                <span class="n">child</span><span class="p">.</span><span class="n">setProperty</span><span class="p">(</span><span class="s">&quot;name&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">);</span>
                <span class="n">DataAddr</span> <span class="n">addr</span><span class="p">(</span><span class="n">session</span><span class="p">.</span><span class="n">addData</span><span class="p">(</span><span class="n">child</span><span class="p">,</span> <span class="n">name</span><span class="p">));</span>
                <span class="n">event</span><span class="p">.</span><span class="n">addReturnArgument</span><span class="p">(</span><span class="s">&quot;childAddr&quot;</span><span class="p">,</span> <span class="n">addr</span><span class="p">.</span><span class="n">asMap</span><span class="p">());</span>
                <span class="n">session</span><span class="p">.</span><span class="n">methodSuccess</span><span class="p">(</span><span class="n">event</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="k">const</span> <span class="n">exception</span><span class="o">&amp;</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">//</span>
        <span class="c1">// Pass the exception on to the caller.</span>
        <span class="c1">//</span>
        <span class="n">session</span><span class="p">.</span><span class="n">raiseException</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">what</span><span class="p">());</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">ExampleAgent</span> <span class="n">agent</span><span class="p">(</span><span class="s">&quot;localhost&quot;</span><span class="p">);</span>
    <span class="n">agent</span><span class="p">.</span><span class="n">setupSchema</span><span class="p">();</span>
    <span class="n">agent</span><span class="p">.</span><span class="n">populateData</span><span class="p">();</span>
    <span class="n">agent</span><span class="p">.</span><span class="n">run</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>

<p><a href="agent.cpp">Download this file</a></p>
