<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">2.10.&#160;Connection Options</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="ch02s09.html">Prev</a>&#160;</td><th align="center" width="60%">Chapter&#160;2.&#160;Using the Qpid Messaging API</th><td align="right" width="20%">&#160;<a accesskey="n" href="section-Maps.html">Next</a></td></tr></table><hr /></div><div class="section"><div class="titlepage"><div><div><h2 class="title"><a id="connection-options" />2.10.&#160;Connection Options</h2></div></div></div><p>
        Aspects of the connections behaviour can be controlled through
        specifying connection options. For example, connections can be
        configured to automatically reconnect if the connection to a
        broker is lost.
      </p><div class="example"><a id="idm252974750128" /><p class="title"><strong>Example&#160;2.14.&#160;Specifying Connection Options in C++, Python, and .NET</strong></p><div class="example-contents"><p>In C++, these options can be set using <code class="function">Connection::setOption()</code> or by passing in a set of options to the constructor. The options can be passed in as a map or in string form:</p><pre class="programlisting">
	Connection connection("localhost:5672", "{reconnect: true}");
	try {
	connection.open();
	!!! SNIP !!!
	</pre><p>or</p><pre class="programlisting">
	Connection connection("localhost:5672");
	connection.setOption("reconnect", true);
	try {
	connection.open();
	!!! SNIP !!!
	</pre><p>In Python, these options can be set as attributes of the connection or using named arguments in
	the <code class="function">Connection</code> constructor:</p><pre class="programlisting">
	connection = Connection("localhost:5672", reconnect=True)
	try:
	connection.open()
	!!! SNIP !!!
	</pre><p>or</p><pre class="programlisting">
	connection = Connection("localhost:5672")
	connection.reconnect = True
	try:
	connection.open()
	!!! SNIP !!!
	</pre><p>
	  In .NET, these options can be set using <code class="function">Connection.SetOption()</code> or by passing in a set of options to the constructor. The options can be passed in as a map or in string form:
	</p><pre class="programlisting">
	  Connection connection= new Connection("localhost:5672", "{reconnect: true}");
	  try {
	  connection.Open();
	  !!! SNIP !!!
	</pre><p>
	  or
	</p><pre class="programlisting">
	  Connection connection = new Connection("localhost:5672");
	  connection.SetOption("reconnect", true);
	  try {
	  connection.Open();
	  !!! SNIP !!!
	</pre><p>See the reference documentation for details in each language.</p></div></div><br class="example-break" /><p>The following table lists the supported connection options.</p><div class="table"><a id="idm252974738976" /><p class="title"><strong>Table&#160;2.4.&#160;Connection Options</strong></p><div class="table-contents"><table border="1" summary="Connection Options" width="100%"><colgroup><col /><col /><col /></colgroup><thead><tr><th>option name</th><th>value type</th><th>semantics</th></tr></thead><tbody><tr><td>
		<code class="literal">username</code>
	      </td><td>
		string
	      </td><td>
		The username to use when authenticating to the broker.
	      </td></tr><tr><td>
		<code class="literal">password</code>
	      </td><td>
		string
	      </td><td>
		The password to use when authenticating to the broker.
	      </td></tr><tr><td>
		<code class="literal">sasl_mechanisms</code>
	      </td><td>
		string
	      </td><td>
		The specific SASL mechanisms to use with the python
		client when authenticating to the broker. The value
		is a space separated list.
	      </td></tr><tr><td>
		<code class="literal">reconnect</code>
	      </td><td>
		boolean
	      </td><td>
		Transparently reconnect if the connection is lost.
	      </td></tr><tr><td>
		<code class="literal">reconnect_timeout</code>
	      </td><td>
		integer
	      </td><td>
		Total number of seconds to continue reconnection attempts before giving up and raising an exception.
	      </td></tr><tr><td>
		<code class="literal">reconnect_limit</code>
	      </td><td>
		integer
	      </td><td>
		Maximum number of reconnection attempts before giving up and raising an exception.
	      </td></tr><tr><td>
		<code class="literal">reconnect_interval_min</code>
	      </td><td>
		integer representing time in seconds
	      </td><td>
		Minimum number of seconds between reconnection attempts. The first reconnection attempt is made immediately; if that fails, the first reconnection delay is set to the value of <code class="literal">reconnect_interval_min</code>; if that attempt fails, the reconnect interval increases exponentially until a reconnection attempt succeeds or <code class="literal">reconnect_interval_max</code> is reached.
	      </td></tr><tr><td>
		<code class="literal">reconnect_interval_max</code>
	      </td><td>
		integer representing time in seconds
	      </td><td>
		Maximum reconnect interval.
	      </td></tr><tr><td>
		<code class="literal">reconnect_interval</code>
	      </td><td>
		integer representing time in seconds
	      </td><td>
		Sets both <code class="literal">reconnection_interval_min</code> and <code class="literal">reconnection_interval_max</code> to the same value.
	      </td></tr><tr><td>
		<code class="literal">heartbeat</code>
	      </td><td>
		integer representing time in seconds
	      </td><td>
		Requests that heartbeats be sent every N seconds. If two
		successive heartbeats are missed the connection is
		considered to be lost.
	      </td></tr><tr><td>
		<code class="literal">protocol</code>
	      </td><td>
		string
	      </td><td>
		Sets the underlying protocol used. The default option is 'tcp'. To enable ssl, set to 'ssl'. The C++ client additionally supports 'rdma'.
	      </td></tr><tr><td>
		<code class="literal">tcp-nodelay</code>
	      </td><td>
		boolean
	      </td><td>
		Set tcp no-delay, i.e. disable Nagle algorithm. [C++ only]
	      </td></tr></tbody></table></div></div><br class="table-break" /></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="ch02s09.html">Prev</a>&#160;</td><td align="center" width="20%"><a accesskey="u" href="ch02.html">Up</a></td><td align="right" width="40%">&#160;<a accesskey="n" href="section-Maps.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">2.9.&#160;Transactions&#160;</td><td align="center" width="20%"><a accesskey="h" href="index.html">Home</a></td><td align="right" valign="top" width="40%">&#160;2.11.&#160;Maps and Lists in Message Content</td></tr></table></div></div>