<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">4.6.&#160;Authentication Providers</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="Java-Broker-Concepts-Ports.html">Prev</a>&#160;</td><th align="center" width="60%">Chapter&#160;4.&#160;Concepts</th><td align="right" width="20%">&#160;<a accesskey="n" href="Java-Broker-Concepts-Other-Services.html">Next</a></td></tr></table><hr /></div><div class="section"><div class="titlepage"><div><div><h2 class="title"><a id="Java-Broker-Concepts-Authentication-Providers" />4.6.&#160;Authentication Providers</h2></div></div></div><p>
        <span class="emphasis"><em>Authentication Providers</em></span> are used to authenticate connections to <span class="emphasis"><em>Ports</em></span>.
        Many <span class="emphasis"><em>Authentication Providers</em></span> can be configured on the Broker at the same time, from which
        each <span class="emphasis"><em>Port</em></span> can be assigned one.
    </p><p>
        The following authentication providers are supported:
        </p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><a class="link" href="Java-Broker-Security.html#Java-Broker-Security-Anonymous-Provider" title="11.1.4.&#160;Anonymous">Anonymous</a>:
            allows anonymous connections to the broker</p></li><li class="listitem"><p><a class="link" href="Java-Broker-Security.html#Java-Broker-Security-External-Provider" title="11.1.3.&#160;External (SSL Client Certificates)">External</a>:
            delegates to external mechanisms such as SSL Client Certificate Authentication</p></li><li class="listitem"><p><a class="link" href="Java-Broker-Security.html#Java-Broker-Security-Kerberos-Provider" title="11.1.2.&#160;Kerberos">Kerberos</a>:
            uses Kerberos to authenticate connections via GSS-API.</p></li><li class="listitem"><p><a class="link" href="Java-Broker-Security.html#Java-Broker-Security-LDAP-Provider" title="11.1.1.&#160;Simple LDAP Authentication Provider">SimpleLDAP</a>:
            authenticate users against an LDAP server.</p></li><li class="listitem"><p><a class="link" href="Java-Broker-Security.html#Java-Broker-Security-PlainPasswordFile-Provider" title="11.1.5.&#160;Plain Password File">PlainPasswordFile</a>:
            authenticate users against credentials stored in plain text in a local file.</p></li><li class="listitem"><p><a class="link" href="Java-Broker-Security.html#Java-Broker-Security-Base64MD5PasswordFile-Provider" title="11.1.6.&#160;Base64MD5 Password File">Base64MD5PasswordFile</a>:
            authenticate users against credentials stored encoded in a local file.</p></li></ul></div><p>
    </p><p>
        The Password File based providers can perform explicit management (adding, removing, changing passwords)
        of users via the Brokers management interfaces. The other providers offer no ability to manage users as they either have no scope
        for user management (e.g Anonymous) or delegate this task to other systems (e.g LDAP).
    </p><p>The configuration details for Authentication Providers are covered in <a class="xref" href="Java-Broker-Security.html#Java-Broker-Security-Authentication-Providers" title="11.1.&#160;Authentication Providers">Section&#160;11.1, &#8220;Authentication Providers&#8221;</a>.</p></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="Java-Broker-Concepts-Ports.html">Prev</a>&#160;</td><td align="center" width="20%"><a accesskey="u" href="Java-Broker-Concepts.html">Up</a></td><td align="right" width="40%">&#160;<a accesskey="n" href="Java-Broker-Concepts-Other-Services.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">4.5.&#160;Ports&#160;</td><td align="center" width="20%"><a accesskey="h" href="index.html">Home</a></td><td align="right" valign="top" width="40%">&#160;4.7.&#160;Other Services</td></tr></table></div></div>